#version 430 core                                                 

in vec3 vPos;                                                    
in vec3 vNorm;

uniform mat4 PVM; 
uniform mat4 MV;

out vec3 normVnorm;
out vec3 pos;
                                               

void main(void)                                                   
{   

	mat4 norm_matrix = transpose(inverse(MV));
	normVnorm = normalize(vec3(norm_matrix * vec4(vNorm, 1.0)));

	
	//vec3 V = normalize(-View - vPos);
	
	pos = vec3(MV * vec4(vPos, 1.0f));

	//color = abs(vec4(vNorm, 1.0));                               
    gl_Position = PVM * vec4(vPos, 1.0f);   
	
}                                                              